type GenomeCoordinatesSource
  {
    id: Integer!
    input: [Integer]
    output: Integer
    type: SourceType!
    kind: String!
    assemblyAccession: String
    sequenceAccession: String!
    locusTag: String
    geneId: Integer
    start: Integer!
    stop: Integer!
    strand: Integer!
  }

type ManuallyTypedSource
  {
    id: Integer!
    input: [Integer]
    output: Integer
    type: SourceType!
    kind: String!
    userInput: String
  }

type NamedThing
  {
    id: Integer!
  }

type RepositoryIdSource
  {
    id: Integer!
    input: [Integer]
    output: Integer
    type: SourceType!
    kind: String!
    repositoryName: RepositoryName!
    repositoryId: String!
  }

interface Source
  {
    id: Integer!
    input: [Integer]
    output: Integer
    type: SourceType!
    kind: String!
  }

type UploadedFileSource
  {
    id: Integer!
    input: [Integer]
    output: Integer
    type: SourceType!
    kind: String!
    fileName: String
    indexInFile: Integer
    fileFormat: SequenceFileFormat
  }

